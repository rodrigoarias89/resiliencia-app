<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="ar.com.lapotoca.resiliencia">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:name=".ResilienciaApplication"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/ResilienciaAppTheme">
        <meta-data
            android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/facebook_app_id" />

        <!-- Main activity for music browsing on phone -->
        <activity
            android:name=".ui.MusicPlayerActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <!-- Use this intent filter to get voice searches, like "Play The Beatles" -->
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!--
        Proxy activity that opens either the NowPlaying TV or the mobile UI, depending on
        the current environment
        -->
        <activity
            android:name=".ui.NowPlayingActivity"
            android:icon="@drawable/ic_launcher" />

        <!--
         Main music service, provides media browsing and media playback services to
         consumers through MediaBrowserService and MediaSession. Consumers connect to it through
         MediaBrowser (for browsing) and MediaController (for play session control)
        -->
        <service
            android:name=".MusicService"
            android:exported="true"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>

        <!-- Service that keeps track of reconnecting to Cast when wifi is enabled. -->
        <service android:name="com.google.android.libraries.cast.companionlibrary.cast.reconnection.ReconnectionService" />

        <!--
             A full screen activity showing controls and a seek bar for
             the current playing music
        -->
        <activity
            android:name=".ui.FullScreenPlayerActivity"
            android:label="@string/app_name"
            android:launchMode="singleTop"
            android:parentActivityName=".ui.MusicPlayerActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.MusicPlayerActivity" />
        </activity>

        <!-- For facebook sharing -->
        <activity
            android:name="com.facebook.FacebookActivity"
            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
            android:label="@string/app_name"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <activity android:name=".gallery.ui.ImageDetailActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.MusicPlayerActivity" />
        </activity>

        <!--
             A receiver that will receive media buttons and send as
            intents to your MediaBrowserServiceCompat implementation.
            Required on pre-Lollipop. More information at
            http://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html
        -->
        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.facebook.FacebookContentProvider"
            android:authorities="com.facebook.app.FacebookContentProvider1748521092070093"
            android:exported="true" />

        <!-- ContentProvider which serves files from this application's asset folder -->
        <provider
            android:name=".gallery.provider.AssetProvider"
            android:authorities="ar.com.lapotoca.resiliencia"
            android:grantUriPermissions="true"
            android:exported="true" />



    </application>

</manifest>